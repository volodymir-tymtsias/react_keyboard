{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressedKeyHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,qBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,qBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACGT,EACC,mBAAGS,UAAU,eAAb,4CAAyDT,EAAzD,OAEA,mBAAGS,UAAU,eAAb,2CAzBV,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.17190617.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressedKeyHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressedKeyHandler);\n  }\n\n  pressedKeyHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {pressedKey ? (\n          <p className=\"App__message\">{`The last pressed key is [${pressedKey}]`}</p>\n        ) : (\n          <p className=\"App__message\">Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}